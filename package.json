{
  "name": "libran-voice-forge",
  "version": "1.0.0",
  "description": "English to LibrÃ¡n text-to-speech translation and synthesis",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "clean:test": "node -e \"require('fs').rmSync('dist-test', { recursive: true, force: true });\"",
    "build:test": "npm run clean:test && tsc -p tsconfig.test.json",
    "test:run": "node -e \"const { execSync } = require('child_process'); const fs = require('fs'); const path = require('path'); const testFiles = []; function findTests(dir) { const files = fs.readdirSync(dir); for (const file of files) { const fullPath = path.join(dir, file); const stat = fs.statSync(fullPath); if (stat.isDirectory()) { findTests(fullPath); } else if (file.endsWith('.test.js')) { testFiles.push(fullPath); } } } findTests('dist-test/test'); if (testFiles.length > 0) { execSync(`node --test --test-reporter=spec ${testFiles.join(' ')}`, { stdio: 'inherit' }); } else { console.log('No test files found'); }\"",
    "test": "npm run build:test && npm run test:run"
  },
  "dependencies": {
    "lucide-react": "^0.544.0",
    "next": "^14.0.0",
    "openai": "^4.20.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "eslint": "^8.0.0",
    "eslint-config-next": "^14.0.0",
    "typescript": "^5.2.0"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
