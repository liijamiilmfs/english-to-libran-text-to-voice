name: CI

on:
  push:
    branches: [ main, dev, features/* ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install Python dependencies
      run: |
        cd tools/dict_importer
        python -m pip install --upgrade pip
        pip install -e .
        
    - name: Verify Python installation
      run: |
        python --version
        python -c "import dict_importer; print('Dictionary importer imported successfully')"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run tests
      run: |
        echo "Running tests with CI environment..."
        CI=true npm test
      
    - name: Build application
      run: |
        echo "Building application..."
        npm run build || (echo "Build failed, trying with clean cache..." && rm -rf .next && npm run build)
      
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level=high
